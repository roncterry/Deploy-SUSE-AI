
############################################################################
#   Common Variables
############################################################################

# Name of the Storgae Class to Use When One is Needed
#
export STORAGE_CLASS_NAME=longhorn


# URI to the SUSE Rancher Application Collection (App Co)
#
export APP_COLLECTION_URI=oci://dp.apps.rancher.io/charts


# The Name of the Secret to Create that is Used to Access the App Co
#
export IMAGE_PULL_SECRET_NAME=application-collection


############################################################################
#   RKE2/K3S Variables
############################################################################

# K8s distro to deploy
#
# Options: rke2, k3s
#
# Default (recommended): rke2
#
export K8S_DISTRO=rke2


# K8s distro version channel to deploy from
#
# This is the channel containing the version of K8s (RKE2/K3S) to deploy.
#
# If you need a specific version you must supply the version tag.
#   Example: v1.30
# 
# If a spcific version tag is not specified then you must supply one of 
# the following version tags: stable, latest, testing
#   Example: stable
#
# Default: stable
#
export K8S_DISTRO_CHANNEL=stable


# Values Used for the Cluster Token
#
# Also commonly used as the na,e fo the cluster when configuring name
# resolution or when importing the cluster into Rancher Manager.
#
export CLUSTER_NAME=rancher


# DNS Domain Name
#
# DNS domain name of the cluster nodes and the cluster
#
# THe AI cluster is assumed to have a DNS entry that resolves 
# CLUSTER_NAME.DOMAIN_NAME to the IP address of the first cluster node 
# (or round-robin DNS/loadbalancer to all cluster control nodes or cluster VIP) 
#
export DOMAIN_NAME=example.com


############################################################################
#   SUSE Storage (Longhorn) Variables
############################################################################

# URL of the Longhorn Helm Repository
#
export LH_HELM_REPO_URL=https://charts.longhorn.io


# Username for the Longhorn Admin User
#
export LH_USER="admin"


# Password for the Longhorn Admin User
#
export LH_PASSWORD="longhorn"


# URL to Access the Longhorn Web UI If Configuring an Ingress
#
export LH_URL="${CLUSTER_NAME}-longhorn.${DOMAIN_NAME}"


# Number of Replicas of Longhorn Service Pods
#
# This typically is set to the number of cluster nodes in the Longhorn cluster.
# For example, if you have a single node cluster this should be set to: 1
#
# This is used for the following Helm chart values:
#   defaultSettings:defaultReplicaCount
#
# Default: 3
#
export LH_DEFAULT_REPLICA_COUNT=1


# The Number of Volume Replicas in the Default Storage Class
#
# When the defualt storage class is created (default name: longhorn) when
# Longhorn is deployed, this is the default number of volume replicas that
# will be defined in that storage class.
#
# This is typically set to the number of cluster nodes if less than 3.
# For example, if you have a single node cluster this should be set to: 1
#
# This is used for the following Helm chart values:
#   persistence:defaultClassReplicaCount
#
# Default: 3
#
export LH_DEFAULT_CLASS_REPLICA_COUNT=1


# The Number of CSI Service Pods
#
# This typically is set to the number of cluster nodes in the Longhorn cluster.
# For example, if you have a single node cluster this should be set to: 1
#
# This is used for the following Helm chart values:
#    csi:attacherReplicaCount
#    csi:provisionerReplicaCount
#    csi:resizerReplicaCount
#    csi:snapshotterReplicaCount
#
# Default: 3
#
export LH_CSI_REPLICA_COUNT=1


# The Percentage of the Default Disk that is Not to Be Allocated
#
# This defines the percentage of the default disk that will not be allocated
# for use as Longhorn storage.
#
# For example, if you have a 1TB disk and if your root volume (/) is 850GB and 
# the percentage is set to 30, only roughly 550GB will be used for Longhorn 
# storage leaving roughly 250GB for use by other things (OS, etc.).
#
# If the first disk is the same disk that your OS is installed on you might 
# want to watch this. However if that disk in 1TB, 30 is probably a little too 
# much to reserve. You might consider setting this to a lower value like 20 or 
# even 15.
#
# This is used for the following Helm chart values:
#   defaultSettings:storageReservedPercentageForDefaultDisk
#
# Default: 30
#
export LH_RESERVED_DISK_PERCENTAGE=15


#########################################################
#     Cert-Manager Variables
#########################################################

# Cert-Manager Helm Install URL
# 
# The Helm repo to install Cert-Manager from.
#
export CERTMANAGER_HELM_REPO="https://charts.jetstack.io"


# Cert-Manager Helm Chart
#
# If this variable is set then the CERTMANAGER_HELM_REPO is ignored and 
# this chart is used to install Cert-Manager instead.
#
export CERTMANAGER_HELM_CHART=oci://dp.apps.rancher.io/charts/cert-manager


# Version of cert-manager to install
#
# Example:
#   CERTMANAGER_VERSION="v1.11.0"
#
export CERTMANAGER_VERSION=""


#########################################################
#     Rancher Variables
#########################################################

# Rancher Helm Install URL
# 
# The Helm repo to install Rancher Manager from.
#
export RANCHER_HELM_REPO="https://charts.rancher.com/server-charts/prime"


# The hostname/FQDN to use for the Rancher manager
# This must be resolvable via DNS.
#
export RANCHER_HOSTNAME=rancher.example.com


# The password to use for the Rancher admin user
#
export RANCHER_ADMIN_PW=rancher


# The number of Rancher replicas to run in the cluster
#
export RANCHER_REPLICAS=1


# The source for the TLS certificates
#
# Options:
#          rancher      (Cert-Manager will generate self-signed certificates)
#          letsEncrypt  (Cert-Manager uses letsEncrypt to generate certificates)
#          secret       (A K8s secret containing the certificate will be used)
#
export RANCHER_TLS_SOURCE=rancher


# The email to use with letsEncrypt when it is used to generate certificates
#
# You must set this to something valid when using RANCHER_TLS_SOURCE=letsEncrypt
#
export RANCHER_TLS_EMAIL=admin@example.com


# The ingress class to use for the certificates
#
# Options:
#          nginx    (Use with RKE2)
#          traefik  (Use with K3s)
#          haproxy
#
export RANCHER_TLS_INGRESS_CLASS=nginx


# The path to the certificate file when using RANCHER_TLS_SOURCE=secret
#
# Note: This is only used when RANCHER_TLS_SOURCE=secret
#
export RANCHER_TLS_CERT_FILE=


# The path to the key file when using RANCHER_TLS_SOURCE=secret
#
# Note: This is only used when RANCHER_TLS_SOURCE=secret
#
export RANCHER_TLS_KEY_FILE=


# The path to the CA file when using RANCHER_TLS_SOURCE=secret
#
# Note: This is only used when RANCHER_TLS_SOURCE=secret
#
export RANCHER_TLS_CA_FILE=


# Is the certificate file signed by a private CA
#
# If the certificate file listed above is signed by a private CA then use: true
# If not then use: false
#
# Note: When agent-tls-mode is set to 'strict' (the default from Rancher v2.9.0)
#       this must be set to "true". This is true for when RANCHER_TLS_SOURCE
#       is set to either secret or letsEncrypt.
#
#       When RANCHER_TLS_SOURCE=secret you must set RANCHER_TLS_CA_FILE to the 
#       path to your CA file.
#
#       When RANCHER_TLS_SOURCE=letsEncrypt the CA file is automatically 
#       retrieved from letsencrypt.org.
#
export RANCHER_TLS_PRIVATE_CA=true
